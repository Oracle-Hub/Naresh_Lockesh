SELECT (SPACE_LIMIT/1024/1024/1024)SPACE_LIMIT_gb,
(SPACE_USED/1024/1024/1024)SPACE_USED_gb,
(SPACE_RECLAIMABLE/1024/1024/1024)SPACE_RECLAIMABLE_gb,
((SPACE_LIMIT/1024/1024/1024)-(SPACE_USED/1024/1024/1024)+(SPACE_RECLAIMABLE/1024/1024/1024)) AVIALABLE_SPACE,
ROUND((SPACE_USED-SPACE_RECLAIMABLE)/SPACE_LIMIT*100,1)"PERCENT_FULL_OF_100%"
FROM V$RECOVERY_FILE_DEST; 

 expdp \'/as sysdba\' directory=exportp DUMPFILE=schema.dmp logfile=schema.log SCHEMAS=raju

SQL> select username,account_status from dba_users where username like 'NEXUS_SHARE';

USERNAME                       ACCOUNT_STATUS
------------------------------ --------------------------------
NEXUS_SHARE                    OPEN

select sum(bytes/1024/1024),owner from dba_segments where OWNER='NEXUS_SHARE' group by owner;


select count(*),owner,status from dba_objects where OWNER='NEXUS_SHARE' group by owner,status;


col OWNER for a30
set line 200

select count(*),owner,object_type from dba_objects where OWNER='NEXUS_SHARE' group by owner,status,object_type;

 COUNT(*) OWNER                          OBJECT_TYPE
---------- ------------------------------ -----------------------
        17 NEXUS_SHARE                    TABLE
        17 NEXUS_SHARE                    SEQUENCE
        15 NEXUS_SHARE                    INDEX



col DIRECTORY_PATH for a40
col DIRECTORY_NAME for a30
set line 200
select OWNER,DIRECTORY_NAME,DIRECTORY_PATH from dba_directories where DIRECTORY_NAME='EXPIMPDIR';

OWNER                          DIRECTORY_NAME                 DIRECTORY_PATH
------------------------------ ------------------------------ ----------------------------------------
SYS                            EXPIMPDIR                      /u01/ext/expdp



Export : 
expdp directory=EXPIMPDIR dumpfile=NEXUS_SHARE_4m_NexusInt_17Sep.dmp logfile=NEXUS_SHARE_4m_NexusInt_17Sep.log schemas=NEXUS_SHARE

set echo off
set feedback off
set verify off
col CUST_DB_ID format     a20  justify c heading 'Cust_DB_ID'
col report_name format    a20  justify c heading 'REPORT_NAME'
col report_date format    a20  justify c heading 'REPORT_DATE'
set linesize 80
set pagesize 40
column total format a15
column free format a15
column allocated format a15
column name heading 'Database|Name'
select name  from v$database;
prompt
prompt Database Size in GBytes

select
        TO_CHAR(a.data_size + b.temp_size + c.redo_size + d.controlfile_size) total,
        TO_CHAR(e.free) free,
        TO_CHAR((a.data_size + b.temp_size + c.redo_size + d.controlfile_size) - e.free) allocated
from
       (select round(sum(bytes) / 1024 / 1024 / 1024,2) data_size from dba_data_files ) a,
           (select round(nvl(sum(bytes), 0) / 1024 / 1024 / 1024,2) temp_size
          from dba_temp_files) b,
                  (select round(sum(bytes) / 1024 / 1024 / 1024,2) redo_size from sys.v_$log) c,
                  (select round(sum(BLOCK_SIZE * FILE_SIZE_BLKS) / 1024 / 1024 / 1024,2) controlfile_size
          from v$controlfile) d,
       (select round(sum(bytes/1024/1024/1024),2) free
        from dba_free_space) e
/








SELECT ARCH.THREAD# "Thread", ARCH.SEQUENCE# "Last Sequence Received",
APPL.SEQUENCE# "Last Sequence Applied", (ARCH.SEQUENCE# - APPL.SEQUENCE#) "Difference"
FROM
(SELECT THREAD# ,SEQUENCE# FROM V$ARCHIVED_LOG WHERE (THREAD#,FIRST_TIME ) IN
(SELECT THREAD#,MAX(FIRST_TIME) FROM V$ARCHIVED_LOG GROUP BY THREAD#)) ARCH,
(SELECT THREAD# ,SEQUENCE# FROM V$LOG_HISTORY WHERE (THREAD#,FIRST_TIME ) IN
(SELECT THREAD#,MAX(FIRST_TIME) FROM V$LOG_HISTORY GROUP BY THREAD#)) APPL
WHERE ARCH.THREAD# = APPL.THREAD#;


SELECT 'alter system kill session ' || '''' || SID || ',' || SERIAL# || ''' immediate ;' FROM gv$session WHERE PROGRAM like 'OMS';

set line 200
col "Tablespace" for a30
col "Used MB" for 99,999,999
col "Free MB" for 99,999,999
col "Total MB" for 99,999,999
col "Block Size" for 9,999,999
set pagesize 100
select
df.tablespace_name "Tablespace",block_size "Block Size",(df.totalspace - fs.freespace) "Used MB",
fs.freespace "Free MB",df.totalspace "Total MB",round(100 * (fs.freespace / df.totalspace)) "Pct. Free"
From dba_tablespaces ts,(select tablespace_name,round(sum(bytes) / 1048576) TotalSpace from dba_data_files
group by tablespace_name) df,(select tablespace_name,round(sum(bytes) / 1048576) FreeSpace from dba_free_space group by tablespace_name) fs where ts.tablespace_name = fs.tablespace_name and
df.tablespace_name = fs.tablespace_name(+) order by "Pct. Free";


set line 200
col "Tablespace" for a30
col "Used MB" for 99,999,999
col "Free MB" for 99,999,999
col "Total MB" for 99,999,999
col "Block Size" for 9,999,999
set pagesize 100
select
df.tablespace_name "Tablespace",block_size "Block Size",(df.totalspace - fs.freespace) "Used MB",
fs.freespace "Free MB",df.totalspace "Total MB",round(100 * (fs.freespace / df.totalspace)) "Pct. Free"
From dba_tablespaces ts,(select tablespace_name,round(sum(bytes) / 1048576) TotalSpace from dba_data_files
group by tablespace_name) df,(select tablespace_name,round(sum(bytes) / 1048576) FreeSpace from dba_free_space group by tablespace_name) fs where ts.tablespace_name = fs.tablespace_name and
df.tablespace_name = fs.tablespace_name(+)
and df.tablespace_name='APPS_UNDOTS1';


Tablespace                     Block Size     Used MB     Free MB    Total MB  Pct. Free
------------------------------ ---------- ----------- ----------- ----------- ----------
LIB_DATA                            8,192      65,476          44      65,520          0



select tablespace_name,((used_space*8192)/1024/1024/1024) used_gb,
((tablespace_size*8192)/1024/1024/1024) size_gb,used_percent
from dba_tablespace_usage_metrics where tablespace_name in  ('APPS_TS_SEED','SYSTEM')
order by 4 desc;


select tablespace_name,((used_space*8192)/1024/1024) used_Mb,
((tablespace_size*8192)/1024/1024) size_Mb,used_percent
from dba_tablespace_usage_metrics where tablespace_name in  ('APPS_TS_SEED','SYSTEM')
order by 4 desc;


col file_name for a60
set line 200
select tablespace_name,file_name,blocks/1024/1024*8 TOTAL_SIZE_GB,maxblocks/1024/1024*8 MAX_SIZE_GB,autoextenSIBLE from dba_data_files where tablespace_name='&TSNAME'
/


select tablespace_name,file_name,blocks/1024/1024*8 TOTAL_SIZE_GB,maxblocks/1024/1024*8 MAX_SIZE_GB,autoextenSIBLE from dba_data_files where tablespace_name IN ('SYSTEM','SYSAUX','USERS','DATASML','DATAUSR','INDEXSML','DATALRG','INDEXLRG');


select tablespace_name,file_name,blocks/1024/1024*8 TOTAL_SIZE_GB,maxblocks/1024/1024*8 MAX_SIZE_GB,autoextenSIBLE from dba_temp_files where tablespace_name='&TSNAME'
/

Below query will give you the last added datafile in oracle.

This will be useful to check whenever you have datafile related issues.

DBA_HIST_DATAFILE is the view stores information of datafiles.

select a.FILE#,a.FILENAME,a.TSNAME,b.creation_time from DBA_HIST_DATAFILE a,V$datafile b where  a.FILE#=b.FILE# order by b.creation_time;


select a.FILE#,a.FILENAME,a.TSNAME,b.creation_time from DBA_HIST_DATAFILE a,V$tempfile b where  a.FILE#=b.FILE# order by b.creation_time;

Tablespace growth per day

SELECT b.tsname tablespace_name
, MAX(b.used_size_gb) cur_used_size_mb
, round(AVG(inc_used_size_mb),2)avg_increas_mb
FROM (
  SELECT a.days, a.tsname, used_size_mb
  , used_size_mb - LAG (used_size_mb,1)  OVER ( PARTITION BY a.tsname ORDER BY a.tsname,a.days) inc_used_size_mb
  FROM (
      SELECT TO_CHAR(sp.begin_interval_time,'MM-DD-YYYY') days
       ,ts.tsname
       ,MAX(round((tsu.tablespace_usedsize* dt.block_size )/(1024*1024*1024),2)) used_size_gb
      FROM DBA_HIST_TBSPC_SPACE_USAGE tsu, DBA_HIST_TABLESPACE_STAT ts
       ,DBA_HIST_SNAPSHOT sp, DBA_TABLESPACES dt
      WHERE tsu.tablespace_id= ts.ts# AND tsu.snap_id = sp.snap_id
       AND ts.tsname = dt.tablespace_name  AND sp.begin_interval_time > sysdate-7
      GROUP BY TO_CHAR(sp.begin_interval_time,'MM-DD-YYYY'), ts.tsname
      ORDER BY ts.tsname, days
  ) A
) b GROUP BY b.tsname ORDER BY b.tsname
/

----------------------------------

— Listing of temp segments.—

SELECT A.tablespace_name tablespace, D.mb_total,
SUM (A.used_blocks * D.block_size) / 1024 / 1024 mb_used,
D.mb_total – SUM (A.used_blocks * D.block_size) / 1024 / 1024 mb_free
FROM v$sort_segment A,
(
SELECT B.name, C.block_size, SUM (C.bytes) / 1024 / 1024 mb_total
FROM v$tablespace B, v$tempfile C
WHERE B.ts#= C.ts#
GROUP BY B.name, C.block_size
) D
WHERE A.tablespace_name = D.name
GROUP by A.tablespace_name, D.mb_total;

— Temp segment usage per session.—

SELECT S.sid || ‘,’ || S.serial# sid_serial, S.username, S.osuser, P.spid, S.module,
P.program, SUM (T.blocks) * TBS.block_size / 1024 / 1024 mb_used, T.tablespace,
COUNT(*) statements
FROM v$sort_usage T, v$session S, dba_tablespaces TBS, v$process P
WHERE T.session_addr = S.saddr
AND S.paddr = P.addr
AND T.tablespace = TBS.tablespace_name
GROUP BY S.sid, S.serial#, S.username, S.osuser, P.spid, S.module,
P.program, TBS.block_size, T.tablespace
ORDER BY sid_serial;


SELECT b.tablespace,
ROUND(((b.blocks*p.value)/1024/1024),2)||'M' AS temp_size,
a.inst_id as Instance,
a.sid||','||a.serial# AS sid_serial,
NVL(a.username, '(oracle)') AS username,
a.program, a.status, a.sql_id
FROM gv$session a, gv$sort_usage b, gv$parameter p
WHERE p.name = 'db_block_size' AND a.saddr = b.session_addr
AND a.inst_id=b.inst_id AND a.inst_id=p.inst_id
ORDER BY temp_size;

select username, tablespace ,sql_id from v$tempseg_usage;

(or)

select S.sid,S.username,U.tablespace,S.sql_hash_value ||'/'|| U.sqlhash hash_value,
U.segtype,u.contents,U.blocks  from v$session S, v$tempseg_usage U where
S.saddr=U.session_addr order by U.blocks;

(or)

select S.sid, S.username "DB_USER", P.username "OS_USER" ,
P.spid,U.tablespace,S.sql_hash_value ||'/'|| U.sqlhash "HASH_VALUE ", U.segtype,U.contents,U.blocks
from v$process p , v$session S ,v$tempseg_usage U
where S.saddr=U.session_addr and p.addr=s.paddr
order by U.blocks;


Alter tablespace TEMP add tempfile '+RECO' size 1G AUTOEXTEND ON NEXT 1G maxsize unlimited;


Alter tablespace UNDOTBS1 add datafile '+DATA' size 1G AUTOEXTEND ON NEXT 1G maxsize unlimited;

col name for a20
SELECT d.status "Status", d.tablespace_name "Name", d.contents "Type", d.extent_management
  "ExtManag",
  TO_CHAR(NVL(a.bytes / 1024 / 1024 /1024, 0),'99,999,990.900') "Size (G)", TO_CHAR(NVL(t.bytes,
  0)/1024/1024/1024,'99999,999.999') ||'/'||TO_CHAR(NVL(a.bytes/1024/1024/1024, 0),'99999,999.999') "Used (GB)",
  TO_CHAR(NVL(t.bytes / a.bytes * 100, 0), '990.00') "Used %"
  FROM sys.dba_tablespaces d, (select tablespace_name, sum(bytes) bytes from dba_temp_files group by
  tablespace_name) a,
 (select tablespace_name, sum(bytes_cached) bytes from
  v$temp_extent_pool group by tablespace_name) t
  WHERE d.tablespace_name = a.tablespace_name(+) AND d.tablespace_name = t.tablespace_name(+)
  AND d.extent_management like 'LOCAL' AND d.contents like 'TEMPORARY';

  
---------------------------------------


UNDO 

col o format a10
col u format a10
select osuser o, username u, sid,segment_name s, substr(sa.sql_text,1,200) txt from v$session s,v$transaction t,dba_rollback_segs r,v$sqlarea sa
where s.taddr=t.addr and t.xidusn=r.segment_id(+) and s.sql_address=sa.address(+) and substr(sa.sql_text,1,200) is not null order by 3;

col name format a8
col username format a8
col osuser format a8
col start_time format a17
col status format a12
tti 'Active transactions'
select username, osuser,t.start_time, r.name, t.used_ublk "ROLLB BLKS",decode(t.space, 'YES', 'SPACE TX',decode(t.recursive, 'YES', 
'RECURSIVE TX',decode(t.noundo, 'YES', 'NO UNDO TX', t.status))) status from sys.v_$transaction t, sys.v_$rollname r, sys.v_$session s
where t.xidusn = r.usn and t.ses_addr = s.saddr
/
How to Calculate the Size of the Database (Doc ID 1360446.1)
HOW TO MONITOR THE PROGRESS OF AN UNDO OPERATION ( https://gavinsoorma.com/2009/06/how-to-monitor-the-progress-of-an-undo-operation/ ) 



